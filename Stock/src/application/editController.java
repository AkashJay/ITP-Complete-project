package application;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;

import java.net.URL;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.util.ResourceBundle;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.jfoenix.controls.JFXButton;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;

import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.event.ActionEvent;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;

public class editController implements Initializable {
	@FXML
	private JFXButton jbtn_addcat;
	@FXML
	private TextField Jtxt_catid;
	@FXML
	private TextField Jtxt_catname;
	@FXML
	private JFXButton jbtn_subcat;
	@FXML
	private TextField Jtxt_subcatid;
	@FXML
	private TextField Jtxt_catid2;
	@FXML
	private TextField Jtxt_subcatname;
	@FXML
	private TextField Jtxt_min;
	@FXML
	private TextField Jtxt_max;
	@FXML
	private JFXButton jbtn_edit;
	 @FXML
	    private TextField Jcombo_subcat;

		@FXML
	private TextField Jtxt_min1;
	@FXML
	private TextField Jtxt_max1;

	// Event Listener on JFXButton[#jbtn_addcat].onAction
	@FXML
	public void btn_addcat(ActionEvent event) {
		// TODO Autogenerated
		
		try{
			//System.out.println(Jtxt_itemcode.getText().substring(0, 1));
			//System.out.println(Jtxt_cateogory.getText());
    			if(Jtxt_catid.getText()==" " || Jtxt_catname.getText()==" "){
    				Alert alert = new Alert(AlertType.WARNING);
    				alert.setTitle("DATA ERROR");
    				//alert.setHeaderText("Information Alert");
    				String s ="Please Check Inseted Data";
    				alert.setContentText(s);
    				alert.show();
    			}
    			
    			else{
    				Connection c = (Connection) DBcon.ConnerDb();
    				String sql="Insert into category values(?,?)";
    				PreparedStatement ps = (PreparedStatement) c.prepareStatement(sql);
    				ps.setString(1, Jtxt_catid.getText());
    				ps.setString(2, Jtxt_catname.getText());
    			}}
    			catch(Exception e){
    				System.out.println(e);
    			}
                        
	}
	// Event Listener on TextField[#Jtxt_catid].onAction
	@FXML
	public void Jtxt_catid(ActionEvent event) {
		// TODO Autogenerated
		Jtxt_catname.requestFocus();
	}
	// Event Listener on TextField[#Jtxt_catname].onAction
	@FXML
	public void Jtxt_catname(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on JFXButton[#jbtn_subcat].onAction
	@FXML
	public void btn_subcat(ActionEvent event) {
		// TODO Autogenerated
		try{
			//System.out.println(Jtxt_itemcode.getText().substring(0, 1));
			//System.out.println(Jtxt_cateogory.getText());
    			if(Jtxt_subcatid.getText()==" " || Jtxt_subcatname.getText()==" "|| Jtxt_catid2.getText()==" " || Jtxt_min.getText()==" "|| Jtxt_max.getText()==" "){
    				Alert alert = new Alert(AlertType.WARNING);
    				alert.setTitle("DATA ERROR");
    				//alert.setHeaderText("Information Alert");
    				String s ="Please Check Inseted Data";
    				alert.setContentText(s);
    				alert.show();
    			}
    			
    			else{
    				Connection c = (Connection) DBcon.ConnerDb();
    				String sql="Insert into category values(?,?,?,?,?)";
    				PreparedStatement ps = (PreparedStatement) c.prepareStatement(sql);
    				ps.setString(1, Jtxt_subcatid.getText());
    				ps.setString(2, Jtxt_subcatname.getText());
    				ps.setString(3, Jtxt_catid2.getText());
    				ps.setString(4, Jtxt_min.getText());
    				ps.setString(5, Jtxt_max.getText());
    			}}
    			catch(Exception e){
    				System.out.println(e);
    			}
                        
	}
	// Event Listener on TextField[#Jtxt_subcatid].onAction
	@FXML
	public void Jtxt_subcatid(ActionEvent event) {
		// TODO Autogenerated
		Jtxt_catid2.requestFocus();
		
	}
	// Event Listener on TextField[#Jtxt_catid2].onAction
	@FXML
	public void Jtxt_catid2(ActionEvent event) {
		// TODO Autogenerated
		if("".equals(Jtxt_catid2.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert qunatity";
		alert.setContentText(s);
		alert.show();
	}
		Pattern pattern = Pattern.compile("([0-9]*[.])?[0-9]+");
		Matcher matcher = pattern.matcher(Jtxt_catid2.getText());
		if(!matcher.matches()){
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Invalid Input";
			alert.setContentText(s);
			alert.show();
		}
		else
		Jtxt_subcatname.requestFocus();
	}
	// Event Listener on TextField[#Jtxt_subcatname].onAction
	@FXML
	public void Jtxt_subcatname(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#Jtxt_min].onAction
	@FXML
	public void Jtxt_min(ActionEvent event) {
		// TODO Autogenerated
		if("".equals(Jtxt_min.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert qunatity";
		alert.setContentText(s);
		alert.show();
	}
		Pattern pattern = Pattern.compile("([0-9]*[.])?[0-9]+");
		Matcher matcher = pattern.matcher(Jtxt_min.getText());
		if(!matcher.matches()){
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Invalid Input";
			alert.setContentText(s);
			alert.show();
		}
		else
		Jtxt_max.requestFocus();
	}
	// Event Listener on TextField[#Jtxt_max].onAction
	@FXML
	public void Jtxt_max(ActionEvent event) {
		// TODO Autogenerated
		if("".equals(Jtxt_max.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert qunatity";
		alert.setContentText(s);
		alert.show();
	}
		Pattern pattern = Pattern.compile("([0-9]*[.])?[0-9]+");
		Matcher matcher = pattern.matcher(Jtxt_max.getText());
		if(!matcher.matches()){
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Invalid Input";
			alert.setContentText(s);
			alert.show();
		}
	}
	// Event Listener on JFXButton[#jbtn_edit].onAction
	@FXML
	public void btn_edit(ActionEvent event) {
		// TODO Autogenerated
		
try{
		Connection c = (Connection) DBcon.ConnerDb();
		String code = Jcombo_subcat.getText();
		String sql="Update subcategory set  minquantity=?, maxquantity=? where subcategoryid='"+code+"'";
		PreparedStatement ps = (PreparedStatement) c.prepareStatement(sql);
		ps.setString(1, Jtxt_min1.getText());
		ps.setString(2, Jtxt_max1.getText());
		
		int i=ps.executeUpdate();
		if(i>0){
			
			Alert alert = new Alert(AlertType.INFORMATION);
			alert.setTitle("INFORMARTION");
			//alert.setHeaderText("Information Alert");
			String s ="Update Succesfull";
			alert.setContentText(s);
			alert.show();        	
		}
		else{   
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Update Cannot perform";
			alert.setContentText(s);
			alert.show();
        }
}
catch(Exception e){System.out.println(e);}
	
	}
	// Event Listener on TextField[#Jtxt_min1].onAction
	@FXML
	public void Jtxt_min1(ActionEvent event) {
		// TODO Autogenerated
		if("".equals(Jtxt_min1.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert qunatity";
		alert.setContentText(s);
		alert.show();
	}
		Pattern pattern = Pattern.compile("([0-9]*[.])?[0-9]+");
		Matcher matcher = pattern.matcher(Jtxt_min1.getText());
		if(!matcher.matches()){
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Invalid Input";
			alert.setContentText(s);
			alert.show();
		}
		else
			Jtxt_max1.requestFocus();
	}
	// Event Listener on TextField[#Jtxt_max1].onAction
	@FXML
	public void Jtxt_max1(ActionEvent event) {
		// TODO Autogenerated
		if("".equals(Jtxt_max1.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert qunatity";
		alert.setContentText(s);
		alert.show();
	}
		Pattern pattern = Pattern.compile("([0-9]*[.])?[0-9]+");
		Matcher matcher = pattern.matcher(Jtxt_max1.getText());
		if(!matcher.matches()){
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Invalid Input";
			alert.setContentText(s);
			alert.show();
		}

	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		try{
			//ObservableList<String> itemlist = FXCollections.observableArrayList();
			Connection c = (Connection) DBcon.ConnerDb();
			Statement s = (Statement) c.createStatement();
			ResultSet r = s.executeQuery("select MAX(categoryid) from category" );
			while(r.next()){
				Integer b = r.getInt(1);
				
				Jtxt_catid.setText(String.valueOf(b+1));
			}
			
			}
			catch(Exception e1){
				System.out.println(e1);
			}
		
		
		try{
			//ObservableList<String> itemlist = FXCollections.observableArrayList();
			Connection c = (Connection) DBcon.ConnerDb();
			Statement s = (Statement) c.createStatement();
			ResultSet r = s.executeQuery("select MAX(subcategoryid) from subcategory" );
			while(r.next()){
				Integer b = r.getInt(1);
				
				Jtxt_subcatid.setText(String.valueOf(b+1));
			}
			
			}
			catch(Exception e1){
				System.out.println(e1);
			}
		
	}
}
