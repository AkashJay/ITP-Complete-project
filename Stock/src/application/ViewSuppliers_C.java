package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ResourceBundle;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.jfoenix.controls.JFXButton;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;

import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TextArea;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;

import javafx.scene.image.ImageView;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.scene.control.TableView;

import javafx.scene.control.DatePicker;

import javafx.scene.control.TableColumn;

public class ViewSuppliers_C implements Initializable{
	
	ObservableList<TableSupplier> list = FXCollections.observableArrayList();
	@FXML
	private TableView<TableSupplier> Jtable_supplierss;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_suppplierid;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_fname;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_lname;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_address;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_dob;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_gender;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_email;
	@FXML
	private TableColumn<TableSupplier, Integer> Jcol_phone;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_nic;
	@FXML
	private TableColumn<TableSupplier, String> Jcol_compnyname;
	@FXML
	private JFXButton Jbtn_home;
	@FXML
	private TextArea Jtxt_address;
	
	
	@FXML
	private TextField Jtxt_supplierid;
	
	@FXML
	private TextField Jtxt_lname;
	@FXML
	private TextField Jtxt_fname;
	@FXML
	private TextField Jtxt_tno;
	@FXML
	private TextField Jtxt_nic;
	@FXML
	private TextField Jtxt_email;
	@FXML
	private TextField Jtxt_cname;
	@FXML
	private ComboBox Jcombo_gender;
	@FXML
	private DatePicker Jdate_dob;
	@FXML
	private JFXButton Jbtn_submit;
	
	
	//@FXML
	//private ImageView Jlbl_img;
	//@FXML
    //private JFXButton Jbtn_choose;

	ObservableList<String> gender = FXCollections.observableArrayList("Male","Female");

	// Event Listener on JFXButton[#Jbtn_home].onAction
	/*@FXML
    void btn_choose(ActionEvent event) {
	    JFileChooser fc=new JFileChooser();
	   
	    File f=fc.getSelectedFile();
	    String path=f.getAbsolutePath();
	   // Jlbl_img.setBounds(WIDTH, WIDTH, 147, 147);
	   // Jlbl_img.setI(new ImageIcon(path));
    }*/
	@FXML
	public void btn_home(ActionEvent event) throws Exception {
		// TODO Autogenerated
		((Node)event.getSource()).getScene().getWindow().hide();
		Stage primaryStage = new Stage();
		Parent root = FXMLLoader.load(getClass().getResource("/application/Home.fxml"));
		Scene scene = new Scene(root);
		scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
		primaryStage.initStyle(StageStyle.UNDECORATED);
		primaryStage.setScene(scene);
		primaryStage.show();
	}
	
	// Event Listener on JFXButton[#Jbtn_submit].onAction
	@FXML
	public void btn_submit(ActionEvent event) {
		// TODO Autogenerated
		Jtxt_supplierid.setText("");
		Jtxt_fname.setText("");
		Jtxt_lname.setText("");
		Jtxt_email.setText("");
		Jtxt_tno.setText("");
		Jtxt_cname.setText("");
		Jtxt_address.setText("");
		Jcombo_gender.setValue("");
		Jdate_dob.setValue(null);
		
		 try{
			 if("".equals(Jtxt_supplierid)||"".equals(Jtxt_fname)|| "".equals(Jtxt_fname)||"".equals(Jtxt_lname)||"".equals(Jtxt_nic)||"".equals(Jtxt_cname)||"".equals(Jtxt_email)||"".equals(Jtxt_tno)||"".equals(Jtxt_address)||val2()){
					System.out.println("aaa");
					Alert alert = new Alert(AlertType.WARNING);
					alert.setTitle("DATA ERROR");
					//alert.setHeaderText("Information Alert");
					String s ="Fill all fields";
					alert.setContentText(s);
					alert.show();
				}
			 else{
			 Connection c = (Connection) DBcon.ConnerDb();
			 String sql = "insert into supplier values (?,?,?,?,null,?,?,?,?,?,null)";
			 
			 PreparedStatement ps= (PreparedStatement) c.prepareStatement(sql);
			 ps.setString(1, Jtxt_supplierid.getText());
			 ps.setString(2, Jtxt_fname.getText());
			 ps.setString(3, Jtxt_lname.getText());
			 ps.setString(4, Jtxt_address.getText());
			 LocalDate ld = Jdate_dob.getValue();
			 ps.setString(5, ld.toString());
			 ps.setString(6, Jcombo_gender.getValue().toString());
			 ps.setString(7, Jtxt_email.getText());
			 ps.setInt(8, Integer.parseInt(Jtxt_tno.getText()));
			 ps.setString(9, Jtxt_nic.getText());
			 ps.setString(10, Jtxt_supplierid.getText());
			 
			  int i=ps.executeUpdate();
	             if(i>0){
	             JOptionPane.showMessageDialog(null, "Insert succefull");
//	             clear();
	             }
	             else{
	                     
	              JOptionPane.showMessageDialog(null, "Insert unsuccefull");
	                     }
		 }}
		 catch(SQLException e){
			 System.out.println(e);
			 

 			try{
 				if("".equals(Jtxt_supplierid)||"".equals(Jtxt_fname)|| "".equals(Jtxt_fname)||"".equals(Jtxt_lname)||"".equals(Jtxt_nic)||"".equals(Jtxt_cname)||"".equals(Jtxt_email)||"".equals(Jtxt_tno)||"".equals(Jtxt_address)||Jdate_dob.getValue()==null||val2()){
     			Alert alert = new Alert(AlertType.WARNING);
     			alert.setTitle("DATA ERROR");
     			//alert.setHeaderText("Information Alert");
     			String s ="Please Fill all fields";
     			alert.setContentText(s);
     			alert.show();}
 				
     		
 			{
 				
 				
 				Connection c = (Connection) DBcon.ConnerDb();
 				String code = Jtxt_supplierid.getText();
 				String sql="UPDATE supplier SET supplierid=?,firstname=?,lastname=?,address=?,gender=?,email=?,phone=?,nic=?,companyname=? WHERE supplierid ='"+code+"'";
 				PreparedStatement ps = (PreparedStatement) c.prepareStatement(sql);
 				ps.setString(1, Jtxt_supplierid.getText());
 				ps.setString(2, Jtxt_fname.getText());
 				ps.setString(3, Jtxt_lname.getText());
 				ps.setString(4, Jtxt_address.getText());
 					//ps.setString(5, Jdate_dob.getValue().toString());
 				ps.setString(6, Jcombo_gender.getSelectionModel().toString());
 				ps.setString(7,Jtxt_email.getText());
 				//ps.setInt(8, Jtxt_tno.getValue());
 				ps.setInt(8, Integer.parseInt(Jtxt_tno.getText()));
 				ps.setString(9,Jtxt_nic.getText());
 			//	LocalDate ld = Jdate_add.getValue();
         		ps.setString(10, Jtxt_address.getText());
         
 				int i=ps.executeUpdate();
 				if(i>0){
 					
 					Alert alert = new Alert(AlertType.INFORMATION);
 					alert.setTitle("INFORMARTION");
 					//alert.setHeaderText("Information Alert");
 					String s ="Update Succesfull";
 					alert.setContentText(s);
 					alert.show();        		//clear();
 				}
 				else{   
 					Alert alert = new Alert(AlertType.ERROR);
 					alert.setTitle("ERROR");
 					//alert.setHeaderText("Information Alert");
 					String s ="Update Cannot perform";
         			alert.setContentText(s);
         			alert.show();
                 }
 				Alert alert1 = new Alert(AlertType.WARNING);
 				alert1.setTitle("DATA ERROR");
 				//alert.setHeaderText("Information Alert");
 				String s1 ="You have this record! \t  Update";
 				alert1.setContentText(s1);
 				alert1.show();}}
 				catch(Exception e1){
 	    			System.err.println(e1);
 	    		}	
 			}
 			
	}
	
	public void loadsuppliertable(){
		try{
			Connection c = (Connection) DBcon.ConnerDb();
			String q = "select * from supplier" ;
			PreparedStatement ps = (PreparedStatement) c.prepareStatement(q);
			ResultSet rs=ps.executeQuery();
			while(rs.next()){
				list.add(new TableSupplier(
						rs.getString(1), 
						rs.getString(2), 
						rs.getString(3), 
						rs.getString(4), 
						rs.getString(5), 
						rs.getString(6), 
						rs.getString(7), 
						rs.getInt(8), 
						rs.getString(9), 
						rs.getString(10)));
				Jtable_supplierss.setItems(list);
			}
			rs.close();
		}
		catch(Exception e){
			System.err.println(e);
		}
	}
	public void Jtxt_address(ActionEvent e){}
	
	public void Jtxt_supplierid(ActionEvent e){
		Jtxt_fname.requestFocus();
	}
	public void Jtxt_lname(ActionEvent e){
		if("".equals(Jtxt_lname.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert last name";
		alert.setContentText(s);
		alert.show();
		}
		else
		Jcombo_gender.requestFocus();
	}
	public void Jtxt_fname(ActionEvent e){
		if("".equals(Jtxt_fname.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert first name";
		alert.setContentText(s);
		alert.show();
		}
		else
		Jtxt_lname.requestFocus();
	}
	public void Jtxt_tno(ActionEvent e){
		if("".equals(Jtxt_tno)){
			Alert alert = new Alert(AlertType.WARNING);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Enter telephone no";
			alert.setContentText(s);
			alert.show();
		}
		 tpvalidator tpvalidator = new tpvalidator();
		   if(!tpvalidator.validate(Jtxt_tno.getText().trim())){
			   Alert alert = new Alert(AlertType.WARNING);
				alert.setTitle("DATA ERROR");
				//alert.setHeaderText("Information Alert");
				String s ="Enter valid telephone no";
				alert.setContentText(s);
				alert.show();
		   }
		   else
			   Jtxt_nic.requestFocus();

	}
	public void Jtxt_nic(ActionEvent e){
		if("".equals(Jtxt_nic.getText()))
		{	
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert nic no";
		alert.setContentText(s);
		alert.show();
		}
		Pattern pattern = Pattern.compile("^[0-9]{9}[vVxX]$");
		Matcher matcher = pattern.matcher(Jtxt_nic.getText());
		if(!matcher.matches()){
			
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert  Valid nic no";
		alert.setContentText(s);
		alert.show();
		}
		else
		Jtxt_cname.requestFocus();
	}
	
	public void Jtxt_email(ActionEvent e){
		if("".equals(Jtxt_email)){
			Alert alert = new Alert(AlertType.WARNING);
			alert.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s ="Enter Email Address";
			alert.setContentText(s);
			alert.show();
		}
		 Emailvalidator emailValidator = new Emailvalidator();
		   if(!emailValidator.validate(Jtxt_email.getText().trim())){
			   Alert alert = new Alert(AlertType.WARNING);
				alert.setTitle("DATA ERROR");
				//alert.setHeaderText("Information Alert");
				String s ="Enter valid email";
				alert.setContentText(s);
				alert.show();
		   }
		   else
			   Jtxt_tno.requestFocus();
	}
	public void Jtxt_cname(ActionEvent e){}
	
	public void Jtable_suppliers(){
		Jtable_supplierss.setOnMouseClicked(e -> {
			TableSupplier p1= Jtable_supplierss.getItems().get(Jtable_supplierss.getSelectionModel().getSelectedIndex());
		
				try{
					Connection c = (Connection) DBcon.ConnerDb();
					String q = "select * from supplier WHERE supplierid = '"+p1.getSupplierid()+"'";
					PreparedStatement ps = (PreparedStatement) c.prepareStatement(q);
					ResultSet rs = ps.executeQuery();
					while(rs.next()){
						Jtxt_supplierid.setText(rs.getString(1));
						Jtxt_fname.setText(rs.getString(2));
						Jtxt_lname.setText(rs.getString(3));
						Jcombo_gender.setValue(rs.getString(6));
						 
						Jtxt_email.setText(rs.getString(7));
						Jtxt_tno.setText(rs.getString(8));
						Jtxt_nic.setText(rs.getString(9));
						Jtxt_cname.setText(rs.getString(10));
						Jtxt_address.setText(rs.getString(4));
						LocalDate a1 = LocalDate.parse(rs.getString(5));
				           Jdate_dob.setValue(a1);
					
						}
				}
				catch(Exception ee){
					System.out.println(ee);
				}
				
			
	});	
	}
	
	private Boolean val2(){
		Pattern pattern = Pattern.compile("^[0-9]{9}[vVxX]$");
		Matcher matcher = pattern.matcher(Jtxt_nic.getText());
		if(!matcher.matches()){
			
			Alert alert = new Alert(AlertType.WARNING);
		alert.setTitle("DATA ERROR");
		//alert.setHeaderText("Information Alert");
		String s ="Insert  Valid nic no";
		alert.setContentText(s);
		alert.show();
		return true;		}
		else
			return false;
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		try{
			//ObservableList<String> itemlist = FXCollections.observableArrayList();
			Connection c = (Connection) DBcon.ConnerDb();
			Statement s = (Statement) c.createStatement();
			ResultSet r = s.executeQuery("select MAX(supplierid) from supplier" );
			Integer b = null;
			String c1 = null;
			
			while(r.next()){
				 b = Integer.parseInt(r.getString(1).substring(1));
				System.out.println(b+1);
				c1=r.getString(1).substring(0,1);
				System.out.println((r.getString(1).substring(0,1))+String.valueOf(b+1));
				Jtxt_supplierid.setText(c1+String.valueOf(b+1));
			}
			//Jtxt_supplierid.setText(c1+String.valueOf(b+1));
			
			
		}
			catch(Exception e1){
				System.out.println(e1);
			}
		//Jtxt_supplierid.setText("");
		Jtxt_fname.setText("");
		Jtxt_lname.setText("");
		Jtxt_email.setText("");
		Jtxt_tno.setText("");
		Jtxt_cname.setText("");
		Jtxt_address.setText("");
		Jcombo_gender.setValue("");
		Jdate_dob.setValue(null);
		
		Jcol_suppplierid.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("supplierid"));
		Jcol_fname.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("firstname"));
		Jcol_lname.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("lastname"));
		Jcol_address.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("address"));
		Jcol_dob.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("dob"));
		Jcol_gender.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("gender"));
		Jcol_email.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("email"));
		Jcol_phone.setCellValueFactory(new PropertyValueFactory<TableSupplier,Integer>("phone"));
		Jcol_nic.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("nic"));
		Jcol_compnyname.setCellValueFactory(new PropertyValueFactory<TableSupplier,String>("companyname"));
		Jtable_supplierss.setItems(list);
		loadsuppliertable();
		
		Jtable_suppliers();
		
		Jcombo_gender.setItems(gender);
	}
}
