package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;

import java.net.URL;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.ResourceBundle;

import com.jfoenix.controls.JFXButton;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.scene.control.TableView;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.TableColumn;

public class ViewNotificationsController implements Initializable{
	//@FXML
	//private AnchorPane pan1;
	@FXML
	private JFXButton Jbtn_home;
	@FXML
	private TableView<TableStocknotification> Jtbl_stocknoti;
	 @FXML
	    private TableColumn<TableStocknotification, Integer> Jcol_subid;

	    @FXML
	    private TableColumn<TableStocknotification, String> Jcol_subname;

	    @FXML
	    private TableColumn<TableStocknotification, Integer> Jcol_catid;

	    @FXML
	    private TableColumn<TableStocknotification, Integer> Jcol_minquantity;

	    @FXML
	    private TableColumn<TableStocknotification, Integer> Jcol_maxquantity;
	    @FXML
	    private TableView<tableExpire> Jtbl_expire;

	    @FXML
	    private TableColumn<tableExpire, String> Jcol_item;

	    @FXML
	    private TableColumn<tableExpire, String> Jcol_date;
	
	    @FXML
	    private JFXButton Jbtn_remove;
	    @FXML
	    private JFXButton Jbtn_remove1;

	    
	    public void sen(){
	    	sendSMS s = new sendSMS();
	    	s.sms("Some items are Expired", "0779892236");
	    }

	
	ObservableList<TableStocknotification> List1 = FXCollections.observableArrayList();
	ObservableList<TableStocknotification> List2 = FXCollections.observableArrayList();
	ObservableList<tableExpire> List3 = FXCollections.observableArrayList();
	// Event Listener on JFXButton[#Jbtn_home].onAction
	
	
	
	public void loadexpiretable(){
		DateFormat df = new SimpleDateFormat("dd/MM/yy"); 
		Calendar calobj = Calendar.getInstance();
		try{
			Connection c = (Connection) DBcon.ConnerDb();
			String q1 = "select * from expire where Expire_date	<'"+df.format(calobj.getTime())+"'" ;
			System.out.println(df.format(calobj.getTime()));
			PreparedStatement ps1 = (PreparedStatement) c.prepareStatement(q1);
			ResultSet rs1=ps1.executeQuery();
			while(rs1.next()){
				List3.add(new tableExpire(
						rs1.getString(1),
						rs1.getString(2)));
				Jtbl_expire.setItems(List3);
			}
			if(!List3.isEmpty()){
				Alert alert1 = new Alert(AlertType.WARNING);
				alert1.setTitle("DATA ERROR");
				//alert.setHeaderText("Information Alert");
				String s1 ="There Expiered Items";
				alert1.setContentText(s1);
				alert1.show();
			}
		}
		catch(Exception e){System.out.println(e);}
	}
	@FXML
	public void btn_home(ActionEvent event) throws Exception{
		// TODO Autogenerated
		((Node)event.getSource()).getScene().getWindow().hide();
		Stage primaryStage = new Stage();
		Parent root = FXMLLoader.load(getClass().getResource("/application/Home.fxml"));
		Scene scene = new Scene(root);
		scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
		primaryStage.initStyle(StageStyle.UNDECORATED);
		primaryStage.setScene(scene);
		primaryStage.show();
	}
	@FXML
	public void btn_remove(ActionEvent event){
		List1.removeAll(List1);
		Jtbl_stocknoti.setItems(List1);
		stocknottable();
	}
	
	public void stocknottable(){
		try{
			Connection c = (Connection) DBcon.ConnerDb();
			String q1 = "select * from subcategory" ;
			PreparedStatement ps1 = (PreparedStatement) c.prepareStatement(q1);
			ResultSet rs1=ps1.executeQuery();
			while(rs1.next()){
				int id = rs1.getInt(1);
				int min = rs1.getInt(4);
				int tot = 0;
				String q2 = "SELECT * FROM items WHERE 	subcategoryid ='"+id+"'" ;
				PreparedStatement ps2 = (PreparedStatement) c.prepareStatement(q2);
				ResultSet rs2=ps2.executeQuery();
				while(rs2.next()){
					tot=tot+rs2.getInt(4);
				}
				System.out.print(rs1.getInt(1)+"   ");
				System.out.println(tot);
				if(tot<min){
					
					List1.add(new TableStocknotification(
							rs1.getInt(1), 
							rs1.getString(2), 
							rs1.getInt(3), 
							rs1.getInt(4),
							rs1.getInt(5)));
					Jtbl_stocknoti.setItems(List1);
				}
			}
			
			if(!List1.isEmpty()){
			Alert alert1 = new Alert(AlertType.WARNING);
			alert1.setTitle("DATA ERROR");
			//alert.setHeaderText("Information Alert");
			String s1 ="Stock items are getting down";
			alert1.setContentText(s1);
			alert1.show();
		}}
		
		catch(Exception e){
			System.out.print(e);
		}
		
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		
		Jcol_subid.setCellValueFactory(new PropertyValueFactory<TableStocknotification,Integer>("subid"));
		Jcol_subname.setCellValueFactory(new PropertyValueFactory<TableStocknotification,String>("subname"));
		Jcol_catid.setCellValueFactory(new PropertyValueFactory<TableStocknotification,Integer>("catid"));
		Jcol_minquantity.setCellValueFactory(new PropertyValueFactory<TableStocknotification,Integer>("minquantity"));
		Jcol_maxquantity.setCellValueFactory(new PropertyValueFactory<TableStocknotification,Integer>("maxquantity"));
		Jtbl_stocknoti.setItems(List1);
		stocknottable();
		
		
		DateFormat df = new SimpleDateFormat("dd/MM/yy"); 
		Calendar calobj = Calendar.getInstance();
	
		try{
			Connection c = (Connection) DBcon.ConnerDb();
			String q1 = "select * from expire where Expire_date	<'"+df.format(calobj.getTime())+"'" ;
			PreparedStatement ps1 = (PreparedStatement) c.prepareStatement(q1);
			ResultSet rs1=ps1.executeQuery();
			while(rs1.next()){
				System.out.println(rs1.getString(1));
			}
		}
		catch(Exception e){System.out.println(e);}
		
		
		
		
		Jcol_item.setCellValueFactory(new PropertyValueFactory<tableExpire,String>("Item_Code"));
		Jcol_date.setCellValueFactory(new PropertyValueFactory<tableExpire,String>("Expire_date"));
		
		loadexpiretable();
		Jtbl_expire.setItems(List3);
		
	}
}
